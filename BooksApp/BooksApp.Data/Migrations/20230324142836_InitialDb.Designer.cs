// <auto-generated />
using System;
using BooksApp.Data.Concrete.EfCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksApp.Data.Migrations
{
    [DbContext(typeof(BooksAppContext))]
    [Migration("20230324142836_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("BooksApp.Entity.Concrete.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6764),
                            Gender = "E",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6785),
                            Name = "Orhan Parasaçan",
                            Url = "orhan-parasacan"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6791),
                            Gender = "E",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6793),
                            Name = "Selami Gülgeçen",
                            Url = "selami-gulgecen"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6797),
                            Gender = "E",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6799),
                            Name = "Seyhan Yolagelen",
                            Url = "seyhan-yolagelen"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6804),
                            Gender = "E",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6805),
                            Name = "Hale Çokseven",
                            Url = "hale-cokseven"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6808),
                            Gender = "E",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6809),
                            Name = "Kemal Devabulan",
                            Url = "kemal-devabulan"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6812),
                            Gender = "E",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 285, DateTimeKind.Local).AddTicks(6814),
                            Name = "Selen Günebakan",
                            Url = "selen-gunebakan"
                        });
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EditionNumber")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EditionYear")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PageCount")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Stock")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1330),
                            EditionNumber = 1,
                            EditionYear = 2020,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1343),
                            Name = "Fahrenheit 451",
                            PageCount = 150,
                            Price = 75m,
                            Stock = 10,
                            Url = "fahrenheit-451"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1354),
                            EditionNumber = 43,
                            EditionYear = 2010,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1355),
                            Name = "Kadınlar Ülkesi",
                            PageCount = 120,
                            Price = 175m,
                            Stock = 10,
                            Url = "kadinlar-ulkesi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1360),
                            EditionNumber = 13,
                            EditionYear = 2010,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1362),
                            Name = "İnsanlar",
                            PageCount = 180,
                            Price = 705m,
                            Stock = 10,
                            Url = "insanlar"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1368),
                            EditionNumber = 2,
                            EditionYear = 2022,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1369),
                            Name = "Görünmez Adam",
                            PageCount = 190,
                            Price = 15m,
                            Stock = 10,
                            Url = "gorunmez-adam"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1374),
                            EditionNumber = 13,
                            EditionYear = 2018,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1376),
                            Name = "Siyah Günce",
                            PageCount = 250,
                            Price = 47m,
                            Stock = 10,
                            Url = "siyah-gunce"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1382),
                            EditionNumber = 8,
                            EditionYear = 2016,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1384),
                            Name = "Nebo'nun Mavi Kitabı",
                            PageCount = 50,
                            Price = 68m,
                            Stock = 10,
                            Url = "nebonun-mavi-kitabi"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1388),
                            EditionNumber = 7,
                            EditionYear = 2021,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1390),
                            Name = "Evrenin Sonundaki Restoran",
                            PageCount = 15,
                            Price = 114m,
                            Stock = 0,
                            Url = "evrenin-sonundaki-restoran"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1394),
                            EditionNumber = 4,
                            EditionYear = 2020,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1396),
                            Name = "Beni Kim Öldürdü?",
                            PageCount = 330,
                            Price = 247m,
                            Stock = 10,
                            Url = "beni-kim-oldurdu"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1401),
                            EditionNumber = 1,
                            EditionYear = 2022,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1402),
                            Name = "Zihin Kütüphanesi",
                            PageCount = 240,
                            Price = 300m,
                            Stock = 0,
                            Url = "zihin-kutuphanesi"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1407),
                            EditionNumber = 11,
                            EditionYear = 2019,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1408),
                            Name = "Yeni Bir Yaşam",
                            PageCount = 400,
                            Price = 166m,
                            Stock = 10,
                            Url = "yeni-bir-yasam"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1413),
                            EditionNumber = 12,
                            EditionYear = 2020,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1414),
                            Name = "Gecenin Kraliçesi",
                            PageCount = 97,
                            Price = 19m,
                            Stock = 10,
                            Url = "gecenin-kralicesi"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1419),
                            EditionNumber = 10,
                            EditionYear = 2020,
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(1420),
                            Name = "Efendi Uyanıyor",
                            PageCount = 125,
                            Price = 75m,
                            Stock = 10,
                            Url = "efendi-uyaniyor"
                        });
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.BookAuthor", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 4
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 5
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 6
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 2
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 1
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 3
                        },
                        new
                        {
                            BookId = 10,
                            AuthorId = 4
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 5
                        },
                        new
                        {
                            BookId = 12,
                            AuthorId = 6
                        });
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.BookCategory", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategories");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 5,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 6,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 7,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 8,
                            CategoryId = 2
                        },
                        new
                        {
                            BookId = 9,
                            CategoryId = 2
                        },
                        new
                        {
                            BookId = 10,
                            CategoryId = 2
                        },
                        new
                        {
                            BookId = 11,
                            CategoryId = 2
                        },
                        new
                        {
                            BookId = 12,
                            CategoryId = 3
                        },
                        new
                        {
                            BookId = 11,
                            CategoryId = 4
                        },
                        new
                        {
                            BookId = 10,
                            CategoryId = 4
                        },
                        new
                        {
                            BookId = 9,
                            CategoryId = 4
                        },
                        new
                        {
                            BookId = 8,
                            CategoryId = 4
                        },
                        new
                        {
                            BookId = 12,
                            CategoryId = 4
                        });
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(9591),
                            Description = "Edebiyat türü burada",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(9605),
                            Name = "Edebiyat",
                            Url = "edebiyat"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(9609),
                            Description = "Başvuru kitapları burada",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(9610),
                            Name = "Başvuru",
                            Url = "basvuru"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(9613),
                            Description = "Çocuk kitapları burada",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(9614),
                            Name = "Çocuk",
                            Url = "cocuk"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(9617),
                            Description = "Ders kitapları burada",
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 289, DateTimeKind.Local).AddTicks(9618),
                            Name = "Ders Kitabı",
                            Url = "ders-kitabi"
                        });
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6588),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6602),
                            Url = "1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6607),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6609),
                            Url = "2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6611),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6612),
                            Url = "3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6615),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6616),
                            Url = "4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6619),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6620),
                            Url = "5.jpg"
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6622),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6624),
                            Url = "6.jpg"
                        },
                        new
                        {
                            Id = 7,
                            BookId = 7,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6626),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6627),
                            Url = "7.jpg"
                        },
                        new
                        {
                            Id = 8,
                            BookId = 8,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6629),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6631),
                            Url = "8.jpg"
                        },
                        new
                        {
                            Id = 9,
                            BookId = 9,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6633),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6634),
                            Url = "9.jpg"
                        },
                        new
                        {
                            Id = 10,
                            BookId = 10,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6637),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6638),
                            Url = "10.jpg"
                        },
                        new
                        {
                            Id = 11,
                            BookId = 11,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6640),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6641),
                            Url = "11.jpg"
                        },
                        new
                        {
                            Id = 12,
                            BookId = 12,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6644),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6645),
                            Url = "12.jpg"
                        },
                        new
                        {
                            Id = 13,
                            BookId = 1,
                            CreatedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6647),
                            IsApproved = true,
                            ModifiedDate = new DateTime(2023, 3, 24, 17, 28, 36, 290, DateTimeKind.Local).AddTicks(6648),
                            Url = "222.jpg"
                        });
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.BookAuthor", b =>
                {
                    b.HasOne("BooksApp.Entity.Concrete.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BooksApp.Entity.Concrete.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.BookCategory", b =>
                {
                    b.HasOne("BooksApp.Entity.Concrete.Book", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BooksApp.Entity.Concrete.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.Image", b =>
                {
                    b.HasOne("BooksApp.Entity.Concrete.Book", "Book")
                        .WithMany("Images")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.Author", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.Book", b =>
                {
                    b.Navigation("BookAuthors");

                    b.Navigation("BookCategories");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("BooksApp.Entity.Concrete.Category", b =>
                {
                    b.Navigation("BookCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
